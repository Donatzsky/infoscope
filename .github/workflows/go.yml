# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target:
          - {os: windows, arch: amd64, ext: '.exe'}
          - {os: linux, arch: amd64, ext: ''}
          - {os: linux, arch: arm64, ext: ''}
          - {os: darwin, arch: amd64, ext: ''}
          - {os: darwin, arch: arm64, ext: ''}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.4'
        cache: true
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: go get .

    - name: Create Directories
      run: |
        mkdir -p data
        mkdir -p web/static/favicons
        mkdir -p web/static/images

    - name: Run Tests
      if: matrix.target.os == 'linux' && matrix.target.arch == 'amd64'
      run: go test -v ./...
      env:
        INFOSCOPE_DB_PATH: ":memory:"
        INFOSCOPE_DATA_PATH: "./testdata"

    - name: Build
      env:
        GOOS: ${{ matrix.target.os }}
        GOARCH: ${{ matrix.target.arch }}
        CGO_ENABLED: 1
      run: |
        go build -v -ldflags="-X main.Version=${{ github.sha }}" -o infoscope${{ matrix.target.ext }} ./cmd/infoscope

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: infoscope-${{ matrix.target.os }}-${{ matrix.target.arch }}
        path: |
          infoscope${{ matrix.target.ext }}
          web/
          data/